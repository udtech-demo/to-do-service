version: "3.9"

services:
  app:
    build:
      context: .
    container_name: app
    volumes:
      - ./conf/config.yml:/app/conf/config.yml:ro
      - ./rsa_keys:/app/rsa_keys:ro
      - ./logs:/app/logs
    ports:
      - 127.0.0.1:${HOST_PORT_APP:-8080}:8080
    expose:
      - 80
    networks:
      - go-app
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "127.0.0.1/api/v1/health-check" ]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      todo-postgres:
        condition: service_healthy

  todo-postgres:
    image: postgres:15.0-alpine
    container_name: todo-postgres
    ports:
      - 127.0.0.1:${HOST_PORT_PG:-5432}:5432
    expose:
      - '5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-todo-service}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          cpus: '0.1'
          memory: 128M
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - go-app

  todo-postgres-test:
    image: postgres:15.0-alpine
    container_name: todo-postgres-test
    ports:
      - 127.0.0.1:${TEST_HOST_PORT_PG:-5431}:5432
    expose:
      - '5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME:-app}
      POSTGRES_USER: ${DB_USER:-app}
      POSTGRES_PASSWORD: ${DB_PASS:-password}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          cpus: '0.1'
          memory: 128M
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - go-app

networks:
  go-app:
    driver: bridge